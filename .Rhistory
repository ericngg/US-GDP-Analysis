<<<<<<< HEAD
filter(Description == industry_choice) %>%
mutate(GDP = GDP_17_inbillion) %>%
select(GDP)
colnames(data) <- industry_choice
data <- as.vector(data)
data
}
Geo <- data.frame(unique(private_sector$GeoName))
colnames(Geo) <- "region"
regiongeo <- as.vector(Geo)
=======
<<<<<<< HEAD
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP, group = 1))
trend_chart
?geom_line
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP, group = 1),
color = "black",) +
geom_point()
trend_chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point()
trend_chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point()
# Trend chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point() +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
trend_chart
# Trend chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point(text = paste(Year, "<br/> $", GDP)) +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point(text = paste(trend_data$Year, "<br/> $", trend_data$GDP)) +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
p <- plot_ly(trend_data, x = ~Year, y = ~GDP, type = 'scatter', mode = 'lines')
p
trend_chart
# Trend chart
trend_chart <- p <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = title = "Months",
yaxis = title = "GDP (in millions)")
trend_chart <- p <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
library(dplyr)
library(plotly)
library(ggplot2)
library(leaflet)
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, "52, 53", "54, 55, 56", 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(Description %in% industry_filter) %>%
select(GeoName, Description, X2017)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
<<<<<<< HEAD
=======
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
New_Engl <- Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
>>>>>>> ec5f464cee244bf5a73897e9f37a0205b843b0e1
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
View(trend_data)
View(trend_data)
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines')
trend_chart
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines')
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
library(dplyr)
library(plotly)
library(ggplot2)
library(leaflet)
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
unfiltered <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
View(unfiltered)
# Slice data into three categories: all industry, private industry, and Gov
chunky_data <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
library("dplyr")
library(ggplot2)
library(plotly)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
View(chunky_regional)
View(chunky_regional)
ggplot(chunky_regional, aes(x = GeoName, y = X2017)) +
geom_bar(stat="identity")
#convert from strings into numeric factors
chunky_regional$X2017 <- as.numeric(as.character(chunky_regional$X2017))
ggplot(chunky_regional, aes(x = GeoName, y = X2017)) +
geom_bar(stat="identity")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
GDP_data[-c(1:4680, 5401:5403), ] %>%
mutate(GDP_2017 = X2017 / 1000)
library("dplyr")
<<<<<<< HEAD
library(ggplot2)
library(plotly)
=======
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
>>>>>>> ec5f464cee244bf5a73897e9f37a0205b843b0e1
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
GDP_data[-c(1:4680, 5401:5403), ] %>%
mutate(GDP_2017 = X2017 / 1000)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(text = paste0(Year, "<br/> $", GDP))
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(text = paste0(Year, "<br/> $", GDP)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0(Year, "<br/> $", GDP)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0(x, "<br/> $", y)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0("x", "<br/> $", "y")) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = "scatter", mode = "lines+markers") %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
install.packages("shiny")
install.packages("shiny")
insertClassMethods("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("shinythemes")
install.packages("ggplot2")
install.packages("plotly")
shiny::runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
install.packages("shiny")
install.packages("shiny")
library("shiny")
library("shiny")
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data %>%
mutate(GDP_2017 = X2017 / 1000)
GDP_data <- GDP_data %>%
mutate(GDP_2017 = X2017 / 1000)
GDP_data %>%
mutate(GDP_2017 = X2017 / 1000)
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
mutate(GDP_17 = X2017 / 1000) %>%
select(GeoName, Description, GDP_17)
library("dplyr")
library(ggplot2)
library(plotly)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
#convert 2017 data from strings into numeric factors
GDP_data$X2017 <- as.numeric(as.character(GDP_data$X2017))
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
mutate(GDP_17 = X2017 / 1000) %>%
select(GeoName, Description, GDP_17)
View(chunky_regional)
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
mutate(GDP_17 = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
# Slice data into three categories: all industry, private industry, and Gov
chunky_regional <- GDP_data %>%
filter(Description == "All industry total" |
Description == " Private industries" |
Description == " Government and government enterprises") %>%
mutate(GDP_17_inbillion = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
=======
data.frame(regiongeo, private_filter("  Utilities"))
hi <- data.frame(regiongeo, private_filter("  Utilities"))
is.data.frame(hi)
private_data <- data.frame(Geo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
private_data <- data.frame(Geo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
private_data <- data.frame(Geo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
data.frame(regiongeo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
data.frame(regiongeo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
hi <- data.frame(regiongeo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"))
hi
hi <- data.frame(regiongeo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("  Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
private_filter("  Utilities")
private_filter("  Construction")
private_filter("  Manufacturing")
private_filter("  Professional and business services")
private_filter("  Educational services")
>>>>>>> 1d034d21a746830d560ed65febb4006e260c5344
private_data <- data.frame(Geo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("  Manufacturing"), private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("  Finance, insurance, real estate, rental, and leasing"),
private_filter("  Professional and business services"), private_filter("   Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
<<<<<<< HEAD
=======
private_data
View(private_data)
>>>>>>> 54a4cbf243d4d12c4ccb7941fe492169e2d9a9d4
runApp()
plot_ly(private_data, x = ~region, y = ~X..Utilities,
type = 'bar', name = 'Private Sector')
plot_ly(private_data, x = ~region, y = ~X..Utilities,
type = 'bar', name = 'Private Sector') %>%
add_trace(y = ~X..Construction, name = 'LA Zoo')
plot_ly(private_data, x = ~region, y = ~X..Utilities,
type = 'bar', name = 'Private Sector') %>%
add_trace(y = ~X..Construction, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'stack')
>>>>>>> 1d034d21a746830d560ed65febb4006e260c5344
p <- plot_ly(private_data, x = ~region, y = ~X..Utilities,
type = "bar", name = "Utilities") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Finance..insurance..real.estate..rental..and.leasing, name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
#### All industry plot
public_filter <- function(industry_choice){
data <- all_industry %>%
filter(Description == "  Utilities") %>%
mutate(GDP = GDP_17_inbillion) %>%
select(GDP)
colnames(data) <- industry_choice
data <- as.vector(data)
data
}
all_industry_data <- data.frame(Geo, public_filter("  Utilities"), public_filter("  Construction"),
public_filter("  Manufacturing"), public_filter("  Wholesale trade"),
public_filter("  Retail trade"), public_filter("  Transportation and warehousing"),
public_filter("  Information"), public_filter("  Finance, insurance, real estate, rental, and leasing"),
public_filter("  Professional and business services"), public_filter("   Educational services"),
public_filter("   Health care and social assistance"), public_filter("   Arts, entertainment, and recreation"),
public_filter("   Accommodation and food services"), public_filter("  Other services (except government and government enterprises)"),
public_filter("Natural resources and mining"))
all_industry_data
all_industry_data <- data.frame(Geo, public_filter("  Utilities"), public_filter("  Construction"),
public_filter("  Manufacturing"), public_filter("  Wholesale trade"),
public_filter("  Retail trade"), public_filter("  Transportation and warehousing"),
public_filter("  Information"), public_filter("  Finance, insurance, real estate, rental, and leasing"),
public_filter("  Professional and business services"), public_filter("   Educational services"),
public_filter("   Health care and social assistance"), public_filter("   Arts, entertainment, and recreation"),
public_filter("   Accommodation and food services"), public_filter("  Other services (except government and government enterprises)"),
public_filter("Natural resources and mining"), public_filter(" Government and government enterprises"))
all_industry_data
#### All industry plot
public_filter <- function(industry_choice){
data <- all_industry %>%
filter(Description == industry_choice) %>%
mutate(GDP = GDP_17_inbillion) %>%
select(GDP)
colnames(data) <- industry_choice
data <- as.vector(data)
data
}
all_industry_data <- data.frame(Geo, public_filter("  Utilities"), public_filter("  Construction"),
public_filter("  Manufacturing"), public_filter("  Wholesale trade"),
public_filter("  Retail trade"), public_filter("  Transportation and warehousing"),
public_filter("  Information"), public_filter("  Finance, insurance, real estate, rental, and leasing"),
public_filter("  Professional and business services"), public_filter("   Educational services"),
public_filter("   Health care and social assistance"), public_filter("   Arts, entertainment, and recreation"),
public_filter("   Accommodation and food services"), public_filter("  Other services (except government and government enterprises)"),
public_filter("Natural resources and mining"), public_filter(" Government and government enterprises"))
all_industry_data
p <- plot_ly(private_data, x = ~region, y = ~X..Utilities,
type = "bar", name = "Utilities") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Finance..insurance..real.estate..rental..and.leasing, name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
p <- plot_ly(all_industry_data, x = ~region, y = ~X..Utilities,
type = "bar", name = "Utilities") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Finance..insurance..real.estate..rental..and.leasing, name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
p <- plot_ly(all_industry_data, x = ~region, y = ~X..Utilities,
type = "bar", name = "Utilities") %>%
add_trace(y = ~X..Finance..insurance..real.estate..rental..and.leasing, name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
p <- plot_ly(all_industry_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
p <- plot_ly(all_industry_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
p <- plot_ly(private_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
a <- plot_ly(all_industry_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p <- plot_ly(private_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
p <- plot_ly(private_data, x = ~region, y = ~X..Finance..insurance..real.estate..rental..and.leasing,
type = "bar", name = "Finance") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and business services") %>%
add_trace(y = ~X..Manufacturing, name = "Manufacturing") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
runApp()
runApp()
runApp()
library("dplyr")
library(ggplot2)
library(plotly)
library(RColorBrewer)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
#convert 2017 data from strings into numeric factors
GDP_data$X2017 <- as.numeric(as.character(GDP_data$X2017))
#industry interested
industry_filter <- c("11, 21", 22, 23, "321,327-339", "311-316,322-326", 42, "44-45", "48-49",
51, 52, 53, "54, 55, 56", 61, 62, 71, 72, 81)
# Slice data into three categories: all industry, private industry, and Gov
data_regional <- GDP_data %>%
filter(
#  Description == "All industry total" |
#      Description == " Private industries" |
Description == " Government and government enterprises" |
IndustryClassification %in% industry_filter) %>%
mutate(GDP_17_inbillion = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
# all industry data
all_industry <- GDP_data %>%
filter(IndustryClassification %in% industry_filter |
Description == " Government and government enterprises") %>%
mutate(GDP_17_inbillion = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
# public sector data
public_sector <- GDP_data %>%
filter(Description == " Government and government enterprises") %>%
mutate(GDP_17_inbillion = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
# private sector data
private_sector <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
mutate(GDP_17_inbillion = X2017 / 1000) %>%
select(GeoName, Description, GDP_17_inbillion)
####Private industry plot
private_filter <- function(industry_choice){
data <- all_industry %>%
filter(Description == industry_choice) %>%
mutate(GDP = GDP_17_inbillion) %>%
select(GDP)
colnames(data) <- industry_choice
data <- as.vector(data)
data
}
Geo <- data.frame(unique(private_sector$GeoName))
colnames(Geo) <- "region"
regiongeo <- as.vector(Geo)
private_data <- data.frame(Geo, private_filter("  Utilities"), private_filter("  Construction"),
private_filter("   Nondurable goods manufacturing"), private_filter("   Durable goods manufacturing"),
private_filter("  Wholesale trade"),
private_filter("  Retail trade"), private_filter("  Transportation and warehousing"),
private_filter("  Information"), private_filter("   Finance and insurance"),
private_filter("   Real estate and rental and leasing"),
private_filter("  Professional and business services"), private_filter("   Educational services"),
private_filter("   Health care and social assistance"), private_filter("   Arts, entertainment, and recreation"),
private_filter("   Accommodation and food services"), private_filter("  Other services (except government and government enterprises)"),
private_filter("Natural resources and mining"))
private_data
colnames(private_data)
p <- plot_ly(private_data, x = ~region, y = ~X...Real.estate.and.rental.and.leasing,
type = "bar", name = "Real Estate, Renting, and Leasing") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and Business services") %>%
add_trace(y = ~X...Finance.and.insurance, name = "Finance & Insurance") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X...Durable.goods.manufacturing, name = "Durable Manufacturing") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X...Nondurable.goods.manufacturing, name = "Nondurable Manufacturing") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts & Recreation") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
p
top10_data <- plot_ly(private_data, x = ~region, y = ~X...Real.estate.and.rental.and.leasing,
type = "bar", name = "Real Estate, Renting, and Leasing") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and Business services") %>%
add_trace(y = ~X...Finance.and.insurance, name = "Finance & Insurance") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X...Durable.goods.manufacturing, name = "Durable Manufacturing") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X...Nondurable.goods.manufacturing, name = "Nondurable Manufacturing") %>%
add_trace(y = ~X..Information, name = "Information") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
top10_data
#### All industry plot
public_filter <- function(industry_choice){
data <- all_industry %>%
filter(Description == industry_choice) %>%
mutate(GDP = GDP_17_inbillion) %>%
select(GDP)
colnames(data) <- industry_choice
data <- as.vector(data)
data
}
all_industry_data <- data.frame(Geo, public_filter("  Utilities"), public_filter("  Construction"),
public_filter("   Nondurable goods manufacturing"), public_filter("   Durable goods manufacturing"),
public_filter("  Wholesale trade"),
public_filter("  Retail trade"), public_filter("  Transportation and warehousing"),
public_filter("  Information"), public_filter("   Finance and insurance"),
public_filter("   Real estate and rental and leasing"),
public_filter("  Professional and business services"), public_filter("   Educational services"),
public_filter("   Health care and social assistance"), public_filter("   Arts, entertainment, and recreation"),
public_filter("   Accommodation and food services"), public_filter("  Other services (except government and government enterprises)"),
public_filter("Natural resources and mining"), public_filter(" Government and government enterprises"))
all_industry_data
top10_data <- plot_ly(all_industry_data, x = ~region, y = ~X...Real.estate.and.rental.and.leasing,
type = "bar", name = "Real Estate, Renting, and Leasing") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and Business services") %>%
add_trace(y = ~X...Finance.and.insurance, name = "Finance & Insurance") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X...Durable.goods.manufacturing, name = "Durable Manufacturing") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X...Nondurable.goods.manufacturing, name = "Nondurable Manufacturing") %>%
add_trace(y = ~X..Information, name = "Information") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
top10_data
a <- plot_ly(all_industry_data, x = ~region, y = ~X...Real.estate.and.rental.and.leasing,
type = "bar", name = "Real Estate, Renting, and Leasing") %>%
add_trace(y = ~X.Government.and.government.enterprises, name = "State and local Government") %>%
add_trace(y = ~X..Professional.and.business.services, name = "Professional and Business services") %>%
add_trace(y = ~X...Finance.and.insurance, name = "Finance & Insurance") %>%
add_trace(y = ~X...Health.care.and.social.assistance, name = "Health Care") %>%
add_trace(y = ~X...Durable.goods.manufacturing, name = "Durable Manufacturing") %>%
add_trace(y = ~X..Retail.trade, name = "Retail") %>%
add_trace(y = ~X..Wholesale.trade, name = "Wholesale") %>%
add_trace(y = ~X...Nondurable.goods.manufacturing, name = "Nondurable Manufacturing") %>%
add_trace(y = ~X..Information, name = "Information") %>%
add_trace(y = ~X...Arts..entertainment..and.recreation, name = "Arts & Recreation") %>%
add_trace(y = ~X..Construction, name = "Construction") %>%
add_trace(y = ~X..Transportation.and.warehousing, name = "Transportation") %>%
add_trace(y = ~X...Educational.services, name = "Education") %>%
add_trace(y = ~X...Accommodation.and.food.services, name = "Accommodation and food services") %>%
add_trace(y = ~X..Other.services..except.government.and.government.enterprises., name = "Others") %>%
add_trace(y = ~Natural.resources.and.mining, name = "Natural Resources") %>%
add_trace(y = ~X..Utilities, name = "Utilities") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
a
gov
#### Public industry plot
public_industry <- all_industry %>%
filter(Description == " Government and government enterprises") %>%
mutate(" Government and government enterprises" = GDP_17_inbillion) %>%
select(" Government and government enterprises")
public_industry <- as.vector(public_industry)
gov_data <- data.frame(Geo, public_industry)
gov <- plot_ly(gov_data, x = ~region, y = ~X.Government.and.government.enterprises,
type = "bar", name = "Government - Public Sector") %>%
layout(xaxis = list(title = "Regions"),
yaxis = list(title = "GDP (In billions)"), barmode = "stack")
go
gov
runApp()
runApp()
shiny::runApp()
<<<<<<< HEAD
runApp()
if (interactive()) {
ui <- fluidPage(
checkboxInput("somevalue", "Some value", FALSE),
verbatimTextOutput("value")
)
server <- function(input, output) {
output$value <- renderText({ input$somevalue })
}
shinyApp(ui, server)
}
runApp()
runApp()
runApp()
runApp()
=======
<<<<<<< HEAD
install.packages("shinywidgets")
yes
install.packages("shinyWidgets")
runApp()
install.packages("snakecase")
runApp()
install.packages("leaflet")
runApp()
runApp()
runApp()
setwd("~/Desktop/Final-Project-INFO201")
>>>>>>> 1d034d21a746830d560ed65febb4006e260c5344
runApp()
runApp()
runApp()
runApp()
<<<<<<< HEAD
Geo
unique(private_sector$GeoName
)
is.vector(unique(private_sector$GeoName)
)
runApp()
runApp()
View(top10_data)
View(top10_data)
runApp()
runApp()
runApp()
choice_region <- unique(private_sector$GeoName)
choice_region
View(all_industry_data)
runApp()
runApp()
runApp()
all_industry_data %>%
filter(region == "New England")
View(all_industry_data %>%
filter(region == "New England"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
all_industry_data["New England", ]
all_industry_data[region == "New England", ]
all_industry_data[region = "New England"]
all_industry_data[region == "New England"]
all_industry_data[region, ]
all_industry_data[, "region"]
all_industry_data[, "region" == "New England"]
all_industry_data[, region == "New England"]
all_industry_data[region, ]
all_industry_data[region == "Far West"]
all_industry_data[all_industry_data$region == "Far West", ]
shiny::runApp()
runApp()
runApp()
all_industry_data[all_industry_data$region %in% c("New England", "Far West"), ]
shiny::runApp()
shiny::runApp()
runApp()
choice_region
runApp()
runApp()
=======
shiny::runApp()
=======
>>>>>>> 54a4cbf243d4d12c4ccb7941fe492169e2d9a9d4
>>>>>>> 1d034d21a746830d560ed65febb4006e260c5344
