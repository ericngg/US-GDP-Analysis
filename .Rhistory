print(hometown)
VIew(cars)
packages.install(cars)
search()
library(cars)
objects(2)
View(cars)
install.packages("ggplot2")
library("ggplot2")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = red))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = blue))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "re"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = "red"))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set2")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set2") +
facet_wrap(~class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set2") +
scale_x_continuous() +
scale_y_continuous() +
scale_colour_brewer()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set2") +
scale_x_continuous() +
scale_y_continuous() +
scale_colour_discrete()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set5") +
scale_x_continuous() +
scale_y_continuous()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set4") +
scale_x_continuous() +
scale_y_continuous()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer(palette = "Set1") +
scale_x_continuous() +
scale_y_continuous()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class), size = 3) + scale_color_brewer() +
scale_x_continuous() +
scale_y_continuous()
shiny::runApp('C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml')
runApp('C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml')
runApp('C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml')
runApp('C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml')
runApp('C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml')
View(midwest)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
library("leaflet")
library("dplyr")
library("maps")
library("geojsonio")
library("RColorBrewer")
library("htmltools")
library("lazyeval")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
setwd("C:/Users/Eric/Desktop/INFO 201/a8-shiny-undfsml")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
setwd("~/")
setwd("C:/Users/Eric/Desktop/INFO 201/Final-Project-INFO201")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(4681:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, starts_with("X"))
# all industry data
all_industry <- GDP_data_interest %>%
filter(Description == "All industry total")
# Nationwide data
nation_data <- GDP_data_interest %>%
filter(GeoName == "United States")
index <- 3
for(i in all_industry[, -(1:2)]) {
all_industry[, index] <- as.numeric(i)
index <- index + 1
}
states <- geojson_read("USA.json", what = "sp")
states <- merge(states, all_industry, by.x = "NAME", by.y = "GeoName")
bins <- c(10000, 60000, 110000, 160000, 210000, 260000, 310000, 360000, Inf)
pal <- colorBin("YlOrRd", domain = as.numeric(states$X1997), bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g Millions",
states$NAME, states$X1997
) %>% lapply(htmltools::HTML)
m <- leaflet(states) %>%
setView(-96, 37.8, 5) %>%
addTiles() %>%
addPolygons(
fillColor = ~pal(X1997),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)
addLegend(m, pal = pal, values = ~X1997, opacity = 0.7, title = NULL,
position = "bottomright")
