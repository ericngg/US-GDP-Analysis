<<<<<<< HEAD
map <- leaflet() %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv(map_access))) %>%
addPolygons()
map <- leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addTiles("U.S. GDP map") %>%
addPolygons()
map <- leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addTiles("U.S. GDP map")
map %>% addPolygons()
map <- leaflet(map_data) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv(map_access))) %>%
addPolygons()
View(GDP_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States") %>%
select(paste0("X", 1997:2017))
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States") %>%
select(GeoName, Description, paste0("X", 1997:2017))
View(trend_data)
View(trend_data)
trand_chart <- plot_ly(trend_data,
x = 1997:2017, y = ~paste0("X", 1997:2017),
type = 'scatter', mode = 'lines')
trend_chart <- plot_ly(trend_data,
x = 1997:2017, y = ~paste0("X", 1997:2017),
type = 'scatter', mode = 'lines')
trend_chart
library(dplyr)
library(leaflet)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States") %>%
select(GeoName, Description, paste0("X", 1997:2017))
# Trend chart
trend_chart <- plot_ly(trend_data,
x = 1997:2017, y = ~paste0("X", 1997:2017),
type = 'scatter', mode = 'lines')
View(trend_data)
View(trend_data)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(GeoName, Description, paste0("X", 1997:2017))
# Trend chart
trend_chart <- plot_ly(trend_data,
x = 1997:2017, y = ~paste0("X", 1997:2017),
type = 'scatter', mode = 'lines')
trend_chart
trend_chart <- plot_ly(trend_data,
type = 'scatter', mode = 'lines')
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(GeoName, Description, paste0("X", 1997:2017))
# Trend chart
trend_chart <- plot_ly(trend_data,
type = 'scatter', mode = 'lines')
library(dplyr)
library(plotly)
library(leaflet)
=======
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, starts_with("X"))
View(GDP_data_interest)
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, X2017)
View(GDP_data_interest)
GDP_data_interest$X2017 <- as.numeric(as.character(GDP_data_interest$X2017))
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, X2017)
GDP_data_interest$X2017 <- as.numeric(as.character(GDP_data_interest$X2017))
GDP_data %>%
select(GeoName, Description, X2017)
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, X2017)
View(GDP_data_interest)
GDP_data_interest$X2017 <- as.numeric(as.character(GDP_data_interest$X2017))
#get rid of "NA"
Region_2017 <- GDP_data_interest %>%
filter(X2017 != "NA")
View(Region_2017)
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, Description, X2017)
#convert from strings into factors
GDP_data_interest$X2017 <- as.numeric(as.character(GDP_data_interest$X2017))
#get rid of "NA"
Region_2017 <- GDP_data_interest %>%
filter(X2017 != "NA")
View(Region_2017)
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
910703 + 769340 + 141363
769340 + 141363
111153 + 910703
View(GDP_data_interest)
View(GDP_data)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, industryid, Description, X2017)
#convert from strings into factors
GDP_data_interest$X2017 <- as.numeric(as.character(GDP_data_interest$X2017))
#get rid of "NA"
Region_2017 <- GDP_data_interest %>%
filter(X2017 != "NA")
New_Engl <- Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
GDP_data_interest <- GDP_data %>%
select(GeoName, industryid, Description, X2017)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
View(GDP_data)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, IndustryClassification, Description, X2017)
View(GDP_data_interest)
GDP_data_interest %>%
filter(IndustryClassification == c(11,21))
GDP_data_interest %>%
filter(IndustryClassification == c(11, 21, 22))
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, IndustryClassification, Description, X2017)
GDP_data_interest <- GDP_data_interest %>%
filter(IndustryClassification == c(11, 21, 22))
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, IndustryClassification, Description, X2017)
GDP_data_interest %>%
filter(IndustryClassification == c(11, 21, 22))
GDP_data_interest %>%
filter(IndustryClassification == c(11, 21))
GDP_data_interest %>%
filter(IndustryClassification == c(11, 21, 22, 23))
GDP_data_interest %>%
filter(IndustryClassification == c(11, 21, 22, 23))
GDP_data_interest %>%
filter(IndustryClassification == c("11", "21", "22", "23"))
GDP_data_interest %>%
filter(IndustryClassification == c("11", "21", "22", "23", "44-45"))
View(GDP_data_interest %>%
filter(IndustryClassification == c("11", "21", "22", "23", "44-45"))
)
a <- c(11, 21, 22, 23)
GDP_data_interest %>%
filter(IndustryClassification %in% a)
a <- c(11, 21, 22, 23, 44-45)
GDP_data_interest %>%
filter(IndustryClassification %in% a)
a <- c(11, 21, 22, 23, "44-45")
GDP_data_interest %>%
filter(IndustryClassification %in% a)
a <- c(11, 21, 22, 23, "31-33", 42, "44-45", "48-49", 51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81, 92)
GDP_data_interest %>%
filter(IndustryClassification %in% a)
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
GDP_data_interest <- GDP_data %>%
select(GeoName, IndustryClassification, Description, X2017)
industry_filter <- c(11, 21, 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81, 92)
filtered_region_2017 <- GDP_data_interest %>%
filter(IndustryClassification %in% a)
filtered_region_2017 <- GDP_data_interest %>%
filter(IndustryClassification %in% industry_filter)
filtered_region_2017
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
View(GDP_data)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c(11, 21, 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81, 92)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
View(filtered_region_2017)
filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
New_Engl <- filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c(11, 21, 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81, 92)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
View(Region_2017)
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
New_Engl <- filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
filtered_region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
filtered_region_2017 %>%
filter(GeoName == "New England")
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
1021856 - 907086
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c(11, 21, 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(GeoName, Description, paste0("X", 1997:2017))
# Trend chart
trend_chart <- plot_ly(trend_data,
type = 'scatter', mode = 'lines')
trend_chart
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t()
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
colnames<-("GDP")
colnames(trend_data) <- c("GDP")
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t()
colnames(trend_data) <- c("GDP")
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t()
colnames(trend_data) <- c("GDP")
View(trend_data)
View(trend_data)
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t()
colnames(trend_data) <- c("GDP")
rownames(trend_data) <- c(1997:2017)
View(trend_chart)
View(trend_chart)
View(trend_data)
View(trend_data)
trend_chart <- ggplot(data = trend_data, aes(x = 1997:2017, y = GDP)) +
geom_line()
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP")
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
mutate(year = c(1997:2017)) %>%
t()
colnames(trend_data) <- c("GDP")
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
mutate(year = c(1997:2017)) %>%
t()
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017))
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame()
View(trend_chart)
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP")
View(trend_data)
View(trend_data)
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
View(trend_data)
View(trend_data)
trend_chart <- ggplot(data = trend_data, aes(x = Year, y = GDP)) +
geom_line()
trend_chart
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
as.numeric(as.character(trend_data$GDP))
View(trend_data)
View(trend_data)
trend_chart <- ggplot(data = trend_data, aes(x = Year, y = GDP)) +
geom_line()
trend_chart
View(trend_data)
View(trend_data)
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- ggplot(data = trend_data, aes(x = Year, y = GDP)) +
geom_line()
trend_chart
View(diamonds)
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP))
trend_chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = GDP, y = Year))
trend_chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP), color = "black")
trend_chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP))
trend_chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP, group = 1))
trend_chart
library(dplyr)
library(plotly)
library(ggplot2)
library(leaflet)
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81, "...")
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
3897066 - 1021856
-910703
2875210-910703
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP, group = 1))
trend_chart
?geom_line
trend_chart <- ggplot(data = trend_data) +
geom_line(aes(x = Year, y = GDP, group = 1),
color = "black",) +
geom_point()
trend_chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point()
trend_chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point()
# Trend chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point() +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
trend_chart
# Trend chart
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point(text = paste(Year, "<br/> $", GDP)) +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
trend_chart <- ggplot(data = trend_data,
aes(x = Year, y = GDP, group = 1)) +
geom_line() +
geom_point(text = paste(trend_data$Year, "<br/> $", trend_data$GDP)) +
labs(title = "U.S. GDP Trend (1997-2017)", y = "GDP (in millions)")
p <- plot_ly(trend_data, x = ~Year, y = ~GDP, type = 'scatter', mode = 'lines')
p
trend_chart
# Trend chart
trend_chart <- p <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = title = "Months",
yaxis = title = "GDP (in millions)")
trend_chart <- p <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
library(dplyr)
library(plotly)
library(ggplot2)
library(leaflet)
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
New_Engl <- Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "Months",
yaxis = "GDP (in millions)")
trend_chart
View(trend_data)
View(trend_data)
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines')
trend_chart
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines')
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
library(dplyr)
library(plotly)
library(ggplot2)
library(leaflet)
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter) %>%
select(GeoName, Description, X2017)
GDP_data %>%
filter(IndustryClassification %in% industry_filter)
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter | Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
library("dplyr")
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
<<<<<<< HEAD
GDP_data_interest <- GDP_data %>%
select(GeoName, Description)
# Map data
map_data <- GDP_data %>%
filter(Description == "All industry total") %>%
select(GeoName, X2017)
# Trend data
trend_data <- GDP_data %>%
filter(GeoName == "United States",
Description == "All industry total") %>%
select(paste0("X", 1997:2017)) %>%
t() %>%
data.frame() %>%
mutate(year = c(1997:2017))
colnames(trend_data) <- c("GDP", "Year")
trend_data$GDP <- as.numeric(as.character(trend_data$GDP))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
yaxis = "GDP (in millions)")
trend_chart
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = "",
yaxis = "GDP (in millions)")
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(text = paste0(Year, "<br/> $", GDP))
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(text = paste0(Year, "<br/> $", GDP)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0(Year, "<br/> $", GDP)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
# Trend chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0(x, "<br/> $", y)) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
add_trace(hoverinfo = paste0("x", "<br/> $", "y")) %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = 'scatter', mode = 'lines') %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
trend_chart <- plot_ly(trend_data, x = ~Year, y = ~GDP,
type = "scatter", mode = "lines+markers") %>%
layout(title = "U.S. GDP Trend (1997-2017)",
xaxis = list(title = "Year"),
yaxis = list(title = "GDP (in millions)"))
trend_chart
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
install.packages("shiny")
install.packages("shiny")
insertClassMethods("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("shinythemes")
install.packages("ggplot2")
install.packages("plotly")
shiny::runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
install.packages("shiny")
install.packages("shiny")
library("shiny")
library("shiny")
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
runApp('C:/Users/USER/Desktop/INFO201/a8-shiny-andrew861003')
=======
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, 52, 53, 54, 55, 56, 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Midwest") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Mideast") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Great Lakes") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Plains") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Southeast") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Rocky Mountain
") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Rocky Mountain") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Far West") %>%
summarise(total = sum(X2017))
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", "42, 44-45", "48-49",
"51, 52", 53, "54, 55, 56", "61, 62", 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "Far West") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
library("dplyr")
#read data
GDP_data <- read.csv(
file = "./data/gdpstate.csv",
stringsAsFactors = FALSE
)
#select columns of interest
GDP_data <- GDP_data[-c(1:4680, 5401:5403), ]
industry_filter <- c("11, 21", 22, 23, "31-33", 42, "44-45", "48-49",
51, "52, 53", "54, 55, 56", 61, 62, 71, 72, 81)
filtered_region_2017 <- GDP_data %>%
filter(IndustryClassification %in% industry_filter |
Description == " Government and government enterprises") %>%
select(GeoName, Description, X2017)
#convert from strings into factors
filtered_region_2017$X2017 <- as.numeric(as.character(filtered_region_2017$X2017))
#get rid of "NA"
Region_2017 <- filtered_region_2017 %>%
filter(X2017 != "NA")
Region_2017 %>%
filter(GeoName == "Rocky Mountain") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Far West") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "Southeast") %>%
summarise(total = sum(X2017))
Region_2017 %>%
filter(GeoName == "New England") %>%
summarise(total = sum(X2017))
##Graph Creation Section
library(ggplot2)
library(plotly)
Region_2017[Geoname == "New England"]
Region_2017[GeoName == "New England"]
Region_2017$GeoName
Region_2017[GeoName == "New England"]
Region_2017["GeoName" == "New England"]
Region_2017[Region_2017$GeoName == "New England"]
Region_2017$X2017[Region_2017$GeoName == "New England"]
Region_2017$Description[Region_2017$GeoName == "New England"]
p <- plot_ly(Region_2017, labels = ~Region_2017$Description[Region_2017$GeoName == "New England"],
values = ~Region_2017$X2017[Region_2017$GeoName == "New England"], type = 'pie') %>%
layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
p <- plot_ly(Region_2017, labels = ~Region_2017$Description[Region_2017$GeoName == "Mideast"],
values = ~Region_2017$X2017[Region_2017$GeoName == "Mideast"], type = 'pie') %>%
layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
input <- "New England"
input
p <- plot_ly(Region_2017, labels = ~Region_2017$Description[Region_2017$GeoName == input],
values = ~Region_2017$X2017[Region_2017$GeoName == input], type = "pie") %>%
layout(title = paste0("United States ", input," Regional GDP in 2017"),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
p <- plot_ly(Region_2017, labels = ~Region_2017$Description[Region_2017$GeoName == input],
values = ~Region_2017$X2017[Region_2017$GeoName == input], type = "pie") %>%
layout(title = paste0("United States Regional GDP - ", input," in 2017"),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p
shiny::runApp()
runApp()
#Source file
source("regional_2017.R")
#Source file
source("regional_2017.R")
unique(Region_2017$GeoName)
Region_choice <- unique(Region_2017$GeoName)
#Source file
source("regional_2017.R")
runApp()
runApp()
runApp()
runApp()
>>>>>>> 3ec5f3bf6fccbbd11e08bb0ef193646342962281
